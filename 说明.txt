16:59 2018/5/21
分拣车配置网络流程：
1、单片机通电，扫码枪（移动终端）通过连接单片机WIFI，且访问192.168.4.1来配置单片机网络设置（将单片机连入局域网），配置完成后，扫码枪（移动终端）断开已连接的单片机的WIFI，且连入局域网。单片机复位重启。
2、单片机配置网络且复位重启后，通过访问本地服务器PHP文件（test.php），如果连接成功，php将单片机的IP、sn码、电量插入或更新至对应的数据库表单，且将单片机状态（MCU_State）更改至“99”，代表分拣车联网成功，处于上线状态。
3、单片机在访问PHP文件时，未连接成功时，所有的灯为红灯闪烁状态，当连接成功时，红灯转为蓝灯常亮2秒。

分拣车接收发送命令协议：
1、此程序设置为16路彩灯，可自行更改。(LED_NUM=16)，彩灯数量更改后，相应的指令也需要达到一定的位数，如10路彩灯，则指令为10+4=14位
2、上位机TCP协议发送指令至单片机所配置的IP和端口，命令格式为(XX……XX)%,，“%”为截至符号，单片机截取“（”“）”中命令为XX……XX共十位，前六位为6路彩灯控制指令，0为灭，1为蓝色，2为绿色，3为蓝+绿，4为红色……7为蓝+绿+红，后四位为单片机控制指令，分别为控制是否闪烁（1启动），控制闪烁频率（0-2频率递增），单片机软复位（R启动），单片机WIFI配置重置（R启动）。
3、单片机每次接收指令成功后，均会发送一次反馈信息至上位机。格式如下：
ok!
Mcu_sn: 116573
Mcu_power: 33%
Led_code: /(000000)
Mcu_ip: 192.168.31.153
上位机对反馈信息进行读取分析，即可得到单片机当前电量。

php文件
1、放在本地服务器根目录，修改PHP文件里数据库登入信息。
2、作用是，接收分拣车一开机所发送的信息，更新插入至数据库，并且将该小车状态改为‘99’，为成功上线状态。

PYthon例程说明：
1、上位机控制灯和操作数据库，已用PY封装为子函数led_controler(time)，time可修改循环查表的时间 单位为S
2、通过循环查表，当表单灯控列数据更改时，将更改的灯控指令发送至MCU。
3、尚为接入扫码枪 ，为测试例程，仅供参考





